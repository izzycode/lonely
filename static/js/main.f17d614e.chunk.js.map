{"version":3,"sources":["components/Message.jsx","components/Messages.jsx","components/Input.jsx","components/ChatApp.jsx","index.js"],"names":["Message","props","position","styles","time","float","Date","toLocaleTimeString","month","day","hour","minute","react_default","a","createElement","react","className","concat","style","message","content","backgroundColor","display","flexDirection","height","margin","marginBottom","overflow","scrollBehavior","width","Messages","messages","map","index","components_Message","key","Input","postMessage","val","_this","addMessage","handleSubmit","e","preventDefault","value","chuckNorrify","fetch","then","res","json","data","joke","_this2","this","onSubmit","type","name","ref","elem","onClick","Component","ChatApp","state","user","currentUser","buildMessage","text","length","setState","Object","toConsumableArray","items","document","querySelectorAll","scrollIntoView","components_Messages","Input_Input","ReactDOM","render","ChatApp_ChatApp","getElementById"],"mappings":"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","file":"static/js/main.f17d614e.chunk.js","sourcesContent":["import React, { Fragment } from 'react'\n\nconst Message = props => {\n  let position, alignment, styles, time\n\n  if (props.position & 1){\n    position = \"left\"\n    alignment = \"flex-start\"\n  }\n  else {\n    position = \"right\"\n    alignment = \"flex-end\"\n  }\n\n  styles = { float: position }\n  time = new Date().toLocaleTimeString(\"en-US\", { month: \"long\", day: \"numeric\", hour: \"2-digit\", minute: \"2-digit\" })\n  return (\n    <Fragment>\n      <small className=\"nes-text is-disabled\">{time}</small>\n      <div className={`message -${position}`}>\n        <div className={`nes-balloon from-${position}`} style={styles}>\n        <p>{props.message.content}</p>\n        </div>\n      </div>\n      <hr/>\n    </Fragment>\n  )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\"\n\nlet styles = {\n  backgroundColor: \"#e76e55\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  height: \"80%\",\n  margin: \"auto\",\n  marginBottom: \"2rem\",\n  overflow: \"scroll\",\n  scrollBehavior: \"smooth\",   \n  width: \"80%\",\n}\n\nconst Messages = props => (\n  <section className=\"nes-container message-list\" style={styles}>\n    {\n      props.messages.map( (message, index) => {\n         return <Message key={index} message={message} position={index}/>\n      })\n    }\n  </section>\n)\n\nexport default Messages\n","import React, { Component } from 'react'\n\nexport default class Input extends Component {\n\n  postMessage = val => {\n    this.props.addMessage(val)\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    this.postMessage(this.message.value)\n    this.message.value = \"\"\n  }\n\n  chuckNorrify = e => {\n    fetch(\"https://api.icndb.com/jokes/random\")\n      .then( res => res.json() )\n      .then( data => this.postMessage(data.value.joke) )\n  }\n\n  render(){\n    return(\n      <form onSubmit={ this.handleSubmit } className=\"nes-field is-inline\">\n        <input type=\"text\" name=\"message\" ref={ elem => this.message = elem } className=\"nes-input\" />\n        <input type=\"submit\" value=\"Send\" className=\"nes-btn is-success\"/>\n        <button type=\"button\" onClick={ this.chuckNorrify } className=\"nes-btn is-warning\">I'm Lonely</button>\n      </form>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport 'nes.css/scss/nes.scss'\nimport Messages from './Messages'\nimport Input from './Input'\n\nlet styles = {\n  backgroundColor: \"#209cee\",\n  margin: \"2rem\",\n  height: \"90vh\",\n}\n\nexport default class ChatApp extends Component {\n  state = {\n    messages: [\n      { user: \"Me\", content: \"hello world\" },\n      { user: \"Myself\", content: \"goodbye world\" },\n      { user: \"I\", content: \"world\" },\n    ],\n    currentUser: \"\",\n  }\n\n  buildMessage = content => {\n    return { content, user: this.state.currentUser }\n  }\n\n  addMessage = text => {\n    if (text.length){\n      this.setState({ messages: [...this.state.messages, this.buildMessage(text)] }, () => {\n        let items = document.querySelectorAll(\".message\");\n        let last = items[items.length-1];\n        last.scrollIntoView(\"slow\");\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"nes-container with-title is-centered\" style={styles}>\n        <h1 className=\"title\">Feeling Lonely</h1>\n        <Messages messages={this.state.messages}/>\n        <Input addMessage={this.addMessage}/>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ChatApp from './components/ChatApp';\n\nReactDOM.render(<ChatApp />, document.getElementById('root'));\n"],"sourceRoot":""}